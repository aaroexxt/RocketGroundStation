<!DOCTYPE html>
<html>
	<head>
		<title>RocketGroundStation</title>
		<link rel="stylesheet" href="css/bootstrap.min.css">
		<link rel="stylesheet" href="css/custom.css">
		<meta charset="utf-8">
    	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	</head>

	<body>
		<nav class="navbar navbar-expand-lg navbar-light bg-light nav-main">
			<li class="navbar-brand brand-large" href="#">Flight Club Alpha V1</li>
			<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarNav">
			<ul class="navbar-nav px-5">
				<li class="nav-item px-3">
					<button class="btn btn-dark" id="menuSixPack" onclick="menuChange('sixPack')">Six Pack</button>
				</li>
				<li class="nav-item px-3">
					<button class="btn btn-light" id="menuBattManagement" onclick="menuChange('batteryManagement')">Battery Management</button>
				</li>
				<li class="nav-item px-3">
					<button class="btn btn-light" id="menuRawData" onclick="menuChange('rawData')">Raw Data</button>
				</li>
			</ul>
			</div>
		</nav>
		<br>

		<div class="container" id="menu-sixPack" style="display: block">
		</div>

		<div class="container" id="menu-batteryManagement" style="display: none">
			<canvas style="padding-left: 10px" id="c-cell-voltage"></canvas>
			<canvas style="padding-left: 10px" id="c-kW-draw"></canvas>
		</div>

		<div class="container" id="menu-rawData" style="display: none">
			<canvas style="padding-left: 10px" id="c-raw-gyro"></canvas>
			<canvas style="padding-left: 10px" id="c-raw-accel"></canvas>
			<canvas style="padding-left: 10px" id="c-raw-alt"></canvas>
			<br>
			<canvas style="padding-left: 10px" id="c-ori-x"></canvas>
			<canvas style="padding-left: 10px" id="c-ori-y"></canvas>
			<canvas style="padding-left: 10px" id="c-ori-z"></canvas>
		</div>

		<nav class="nav fixed-bottom navbar-light bg-light justify-content-center">
			<li class="navbar-brand text-danger" id="connect-status">Connection Status: Disconnected</li>
		</nav>

		<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
		<script src="/js/AaronGraphLibrary.js"></script>
		<script src="http://localhost:80/socket.io/socket.io.js"></script>
	</body>

	<script>
		let loc = window.location.href;
		var socket = io.connect(loc.substring(0, loc.length-1)+":"+(window.location.port||80), {
			withCredentials: true
		});

		socket.on('connect', () => {
			console.log("Connected to server");
			let stat = document.getElementById("connect-status");
			stat.innerHTML = "Connection Status: OK";
			stat.className = "navbar-brand";
		});
		socket.on('event', data => {
			console.log("data get: "+data);
		});
		socket.on('disconnect', () => {
			console.log("Disconnected from server");
			let stat = document.getElementById("connect-status");
			stat.innerHTML = "Connection Status: Disconnected";
			stat.className = "navbar-brand text-danger";
		});

		let bufferGyro = [[], [], []]; //x, y, z
		let bufferAccel = [[], [], []]; //x, y, z
		let bufferAlt = [[]]; //alt
		const rawGyroGraph = new DisplayGraph("c-raw-gyro", {
			buffers: bufferGyro,
			colors: ["#ff0000", "#00ff00", "#0000ff"],
			title: "Raw Gyro Data",
			titleX: "Time (sec)",
			titleY: "Angular Velocity (deg/sec)"
		});
		const rawAccelGraph = new DisplayGraph("c-raw-accel", {
			buffers: bufferAccel,
			colors: ["#ff0000", "#00ff00", "#0000ff"],
			title: "Raw Accel Data",
			titleX: "Time (sec)",
			titleY: "Acceleration (m/sec^2)"
		});
		const rawAltGraph = new DisplayGraph("c-raw-alt", {
			buffers: bufferAlt,
			colors: ["#000"],
			title: "Raw Altitude Data",
			titleX: "Time (sec)",
			titleY: "Altitude (ft)"
		});
		socket.on("data-raw-gyro", data => {
			bufferGyro[0].push([data.x, data.time]);
			bufferGyro[1].push([data.y, data.time]);
			bufferGyro[2].push([data.z, data.time]);
		})
		socket.on("data-raw-accel", data => {
			bufferAccel[0].push([data.x, data.time]);
			bufferAccel[1].push([data.y, data.time]);
			bufferAccel[2].push([data.z, data.time]);
		})
		socket.on("data-raw-alt", data => {
			bufferAlt[0].push([data.alt, data.time]);
		})

		const bufferOriX = [[]]; //x
		const bufferOriY = [[]]; //y
		const bufferOriZ = [[]]; //z
		const rawOriXGraph = new DisplayGraph("c-ori-x", {
			buffers: bufferOriX,
			colors: ["#000"],
			title: "Body Orientation X",
			titleX: "Time (sec)",
			titleY: "deg"
		});
		const rawOriYGraph = new DisplayGraph("c-ori-y", {
			buffers: bufferOriY,
			colors: ["#000"],
			title: "Body Orientation Y",
			titleX: "Time (sec)",
			titleY: "deg"
		});
		const rawOriZGraph = new DisplayGraph("c-ori-z", {
			buffers: bufferOriZ,
			colors: ["#000"],
			title: "Body Orientation Z",
			titleX: "Time (sec)",
			titleY: "deg"
		});
		socket.on("data-ori", data => {
			bufferOriX[0].push([data.x, data.time]);
			bufferOriY[0].push([data.y, data.time]);
			bufferOriZ[0].push([data.z, data.time]);
		})

		const menuChange = newMenu => {
			let light = [];
			let dark = [];
			let hide = [];
			let show = [];
			if (newMenu == "sixPack") {
				light.push("menuBattManagement");
				light.push("menuRawData");
				dark.push("menuSixPack");

				hide.push("menu-rawData");
				hide.push("menu-batteryManagement");
				show.push("menu-sixPack");
			} else if (newMenu == "batteryManagement") {
				light.push("menuRawData");
				light.push("menuSixPack");
				dark.push("menuBattManagement");

				hide.push("menu-rawData");
				show.push("menu-batteryManagement");
				hide.push("menu-sixPack");
			} else {
				light.push("menuBattManagement");
				light.push("menuSixPack");
				dark.push("menuRawData");

				show.push("menu-rawData");
				hide.push("menu-batteryManagement");
				hide.push("menu-sixPack");
			}

			for (let i=0; i<light.length; i++) {
				document.getElementById(light[i]).className = "btn btn-light";
			}
			for (let i=0; i<dark.length; i++) {
				document.getElementById(dark[i]).className = "btn btn-dark";
			}

			for (let i=0; i<hide.length; i++) {
				document.getElementById(hide[i]).style.display = "none";
			}
			for (let i=0; i<show.length; i++) {
				document.getElementById(show[i]).style.display = "block";
			}

		}
	</script>
</html>